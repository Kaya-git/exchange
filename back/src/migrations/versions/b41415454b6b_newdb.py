"""newdb

Revision ID: b41415454b6b
Revises: 
Create Date: 2023-11-20 18:22:13.206782

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from fastapi_storages.integrations.sqlalchemy import ImageType
from config import conf


# revision identifiers, used by Alembic.
revision: str = 'b41415454b6b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contact',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('link', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('link'),
    sa.UniqueConstraint('name')
    )
    op.create_table('currency',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('coingecko_tik', sa.Text(), nullable=False),
    sa.Column('tikker', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('Crypto', 'Fiat', name='currencytype'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('buy_gas', sa.Numeric(), nullable=False),
    sa.Column('buy_margin', sa.Numeric(), nullable=False),
    sa.Column('reserve', sa.Numeric(), nullable=False),
    sa.Column('max', sa.Numeric(), nullable=False),
    sa.Column('min', sa.Numeric(), nullable=False),
    sa.Column('icon', ImageType(conf.image_admin_storage), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('tikker')
    )
    op.create_table('faq',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('answer'),
    sa.UniqueConstraint('question')
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('second_name', sa.Text(), nullable=True),
    sa.Column('hashed_password', sa.String(length=1024), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('registered_on', sa.TIMESTAMP(), nullable=False),
    sa.Column('buy_volume', sa.Numeric(), nullable=True),
    sa.Column('role', sa.Enum('User', 'Moderator', 'Admin', name='role'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('payment_option',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('number', sa.Text(), nullable=False),
    sa.Column('holder', sa.Text(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('currency_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('image'),
    sa.UniqueConstraint('number')
    )
    op.create_table('review',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('data', sa.TIMESTAMP(), nullable=False),
    sa.Column('rating', sa.Enum('one_star', 'two_stars', 'three_stars', 'four_stars', 'five_stars', name='mark'), nullable=False),
    sa.Column('moderated', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_payment_option',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('number', sa.Text(), nullable=False),
    sa.Column('holder', sa.Text(), nullable=False),
    sa.Column('currency_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_table('order',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_email', sa.String(length=320), nullable=False),
    sa.Column('user_cookie', sa.Text(), nullable=False),
    sa.Column('user_buy_sum', sa.Numeric(), nullable=False),
    sa.Column('user_sell_sum', sa.Numeric(), nullable=False),
    sa.Column('date', sa.TIMESTAMP(), nullable=False),
    sa.Column('status', sa.Enum('Pending', 'Timeout', 'Canceled', 'Inprocces', 'Verified', 'NotVerified', 'Completed', name='status'), nullable=False),
    sa.Column('decline_reason', sa.Enum('Last4Digits', 'WebDomen', 'NoOrder', 'Inittials', 'BadQuality', name='verifdeclinereason'), nullable=True),
    sa.Column('sell_payment_option_id', sa.BigInteger(), nullable=False),
    sa.Column('buy_payment_option_id', sa.BigInteger(), nullable=False),
    sa.Column('service_sell_po_id', sa.BigInteger(), nullable=True),
    sa.Column('service_buy_po_id', sa.BigInteger(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('sell_currency_id', sa.BigInteger(), nullable=False),
    sa.Column('buy_currency_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['buy_currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['buy_payment_option_id'], ['payment_option.id'], ),
    sa.ForeignKeyConstraint(['sell_currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['sell_payment_option_id'], ['payment_option.id'], ),
    sa.ForeignKeyConstraint(['service_buy_po_id'], ['service_payment_option.id'], ),
    sa.ForeignKeyConstraint(['service_sell_po_id'], ['service_payment_option.id'], ),
    sa.ForeignKeyConstraint(['user_email'], ['user.email'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pending_admin',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('req_act', sa.Enum('VerifyNewOrder', 'VerifyTransaction', 'VerifyReview', name='reqaction'), nullable=True),
    sa.Column('order_id', sa.BigInteger(), nullable=True),
    sa.Column('review_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pending_admin')
    op.drop_table('order')
    op.drop_table('service_payment_option')
    op.drop_table('review')
    op.drop_table('payment_option')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('faq')
    op.drop_table('currency')
    op.drop_table('contact')
    # ### end Alembic commands ###
